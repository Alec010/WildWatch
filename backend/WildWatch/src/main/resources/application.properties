spring.application.name=WildWatch
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.show-sql=true
# Use update mode to automatically update the schema
spring.jpa.hibernate.ddl-auto=update

# Flyway configuration (disabled for now)
spring.flyway.enabled=false
# spring.flyway.locations=classpath:db/migration
# spring.flyway.baseline-on-migrate=true
# spring.flyway.validate-on-migrate=true
server.port=8080
server.address=0.0.0.0

# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION:86400000}

# File upload configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

# Logging configuration
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.session=DEBUG
logging.level.com.teamhyungie.WildWatch=DEBUG

# =======================
# Microsoft OAuth2 Configuration
# =======================

spring.security.oauth2.client.registration.microsoft.client-id=${MS_CLIENT_ID}
spring.security.oauth2.client.registration.microsoft.client-secret=${MS_CLIENT_SECRET}
spring.security.oauth2.client.registration.microsoft.scope=openid,profile,email
spring.security.oauth2.client.registration.microsoft.client-name=Microsoft
spring.security.oauth2.client.registration.microsoft.provider=microsoft
spring.security.oauth2.client.registration.microsoft.redirect-uri=${MS_REDIRECT_URI:http://localhost:8080/login/oauth2/code/microsoft}
spring.security.oauth2.client.registration.microsoft.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.microsoft.authorization-grant-type=authorization_code

# Session Configuration
server.servlet.session.timeout=30m
server.servlet.session.cookie.secure=true
server.servlet.session.tracking-modes=cookie
server.servlet.session.cookie.same-site=NONE
server.servlet.session.cookie.http-only=true

# =======================
# Microsoft Provider Configuration
# =======================

spring.security.oauth2.client.provider.microsoft.authorization-uri=https://login.microsoftonline.com/${MS_TENANT_ID}/oauth2/v2.0/authorize
spring.security.oauth2.client.provider.microsoft.token-uri=https://login.microsoftonline.com/${MS_TENANT_ID}/oauth2/v2.0/token
spring.security.oauth2.client.provider.microsoft.jwk-set-uri=https://login.microsoftonline.com/${MS_TENANT_ID}/discovery/v2.0/keys
spring.security.oauth2.client.provider.microsoft.user-info-uri=https://graph.microsoft.com/oidc/userinfo
spring.security.oauth2.client.provider.microsoft.user-name-attribute=name

# Database Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1800000

# Supabase Configuration
supabase.url=${SUPABASE_URL}
supabase.key=${SUPABASE_KEY}

# Frontend URL Configuration
frontend.url=${FRONTEND_URL:http://localhost:3000}
frontend.production-url=https://wild-watch-smoky.vercel.app

# Gemini AI Configuration
gemini.api.key=${GEMINI_API_KEY}
gemini.model.name=gemini-2.5-pro

# Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=arelaalec@gmail.com
spring.mail.password=jylx qgbi gpss zwly
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Google Maps Configuration
google.maps.api.key=${GOOGLE_MAPS_API_KEY}
campus.center.latitude=${CAMPUS_CENTER_LAT:10.2955}
campus.center.longitude=${CAMPUS_CENTER_LNG:123.8800}
campus.max.distance.meters=${CAMPUS_MAX_DISTANCE:800}

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true

